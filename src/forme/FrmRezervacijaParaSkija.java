/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.AbstractObject;
import domen.RezervacijaSkija;
import domen.Skijas;
import domen.StavkaRezervacijeSkija;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import kontroler.Kontroler;
import modeli.forme.ModelRezervacijaTabelaStavki;

/**
 *
 * @author Nadja
 */
public class FrmRezervacijaParaSkija extends javax.swing.JFrame {

    ModelRezervacijaTabelaStavki model;
    String mode = "kreiraj";
    JFrame parent;
    List<AbstractObject> listaDostupnihParovaSkija;
    JComboBox tipS;
    public void setParent(JFrame parent) {
        this.parent = parent;
    }

    /**
     * Creates new form FrmRezervacija
     */
    public FrmRezervacijaParaSkija() {
        initComponents();
        srediFormu();
        txtId.setEnabled(false);

    }

    public FrmRezervacijaParaSkija(RezervacijaSkija rezervacijaSkija) {
        initComponents();
        srediFormu();
        txtId.setEnabled(false);
        ucitajRezervacijuPodatke(rezervacijaSkija);
        mode = "izmeni";

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        txtDatum = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        jComboBox1 = new javax.swing.JComboBox();
        btnPronadji = new javax.swing.JButton();
        Sacuvaj = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStavke = new javax.swing.JTable();
        btnDodaj = new javax.swing.JButton();
        btnUkloni = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setText("Rezervacija ID:");

        jLabel2.setText("Datum rezervacije:");

        jLabel3.setText("Uplata unapred");

        jLabel4.setText("Skijas:");

        jRadioButton1.setText("Da");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnPronadji.setText("Pronadji");
        btnPronadji.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPronadjiActionPerformed(evt);
            }
        });

        Sacuvaj.setText("Sacuvaj");
        Sacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SacuvajActionPerformed(evt);
            }
        });

        tblStavke.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblStavke);

        btnDodaj.setText("Dodaj stavku");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        btnUkloni.setText("Ukloni stavku");
        btnUkloni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUkloniActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(275, 275, 275)
                        .addComponent(Sacuvaj))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 671, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(61, 61, 61)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtId)
                                    .addComponent(txtDatum)
                                    .addComponent(jRadioButton1)
                                    .addComponent(jComboBox1, 0, 438, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnPronadji))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnDodaj)
                                .addGap(32, 32, 32)
                                .addComponent(btnUkloni)))))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtDatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jRadioButton1))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPronadji))
                .addGap(31, 31, 31)
                .addComponent(Sacuvaj)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDodaj)
                    .addComponent(btnUkloni))
                .addContainerGap(56, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPronadjiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPronadjiActionPerformed
        // TODO add your handling code here:
        FrmPretragaSkijasa fp = new FrmPretragaSkijasa(this);
        fp.setVisible(true);
    }//GEN-LAST:event_btnPronadjiActionPerformed

    private void SacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SacuvajActionPerformed
        try {
            // TODO add your handling code here:
            String id = txtId.getText().trim();
            String dat = txtDatum.getText().trim();
            SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
            Date datum = sdf.parse(dat);
            boolean uuplataUnapred = jRadioButton1.isSelected();
            Skijas skijas = (Skijas) jComboBox1.getSelectedItem();
            List<StavkaRezervacijeSkija> listaStavki = model.getListaStavki();
            for (StavkaRezervacijeSkija stavkaRezervacijeSkija : listaStavki) {
                if (stavkaRezervacijeSkija.getParSkija().getMarka().equals("")) {
                    throw new Exception("Svaka stavka mora imati par skija!");
                }
            }
            proveriDupleUnose();
            if (mode.equals("kreiraj")) {
                RezervacijaSkija rs = new RezervacijaSkija("0", datum, uuplataUnapred, skijas, listaStavki);
                RezervacijaSkija rsNova = Kontroler.getInstance().sacuvajRezervaciju(rs);
                txtId.setText(rsNova.getRezervacijaID());
                JOptionPane.showMessageDialog(rootPane, "Uspesno sacuvana rezervacija!");

            } else {
                RezervacijaSkija izmenjena = new RezervacijaSkija(id, datum, uuplataUnapred, skijas, listaStavki);
                ArrayList<StavkaRezervacijeSkija> novaLista = new ArrayList<>();
                for (StavkaRezervacijeSkija stavkaRezervacijeSkija : listaStavki) {
                    stavkaRezervacijeSkija.setRezervacijaSkija(izmenjena);
                    novaLista.add(stavkaRezervacijeSkija);
                }
                izmenjena.setListaStavki(novaLista);
                RezervacijaSkija izBaze = Kontroler.getInstance().izmeniRezervaciju(izmenjena);
                JOptionPane.showMessageDialog(rootPane, "Uspesno izmenjena rezervacija!");

            }

        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(rootPane, "Datum nije unet pravilno!");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Sistem ne moze da sacuva rezervaciju!", "GRESKA", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_SacuvajActionPerformed

    private void btnUkloniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUkloniActionPerformed
        // TODO add your handling code here:
        if (tblStavke.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(parent, "Molim vas odaberite stavku!");
        } else {
            model.getListaStavki().remove(tblStavke.getSelectedRow());
            int i = 1;
            for (StavkaRezervacijeSkija stavka : model.getListaStavki()) {
                stavka.setRedniBrojStavke(i++);
            }
            model.fireTableDataChanged();
        }
    }//GEN-LAST:event_btnUkloniActionPerformed

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        // TODO add your handling code here:
        model.dodajNovuStavku();

    }//GEN-LAST:event_btnDodajActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        if (mode.equals("edit") && (parent instanceof FrmRezervacijePrikaz)) {
            FrmRezervacijePrikaz stara = (FrmRezervacijePrikaz) parent;
            FrmRezervacijePrikaz nova = new FrmRezervacijePrikaz();
            nova.setParent(stara.parent);
            nova.setVisible(true);
        } else {
            parent.setVisible(true);
        }
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmRezervacijaParaSkija.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmRezervacijaParaSkija.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmRezervacijaParaSkija.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmRezervacijaParaSkija.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmRezervacijaParaSkija().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Sacuvaj;
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnPronadji;
    private javax.swing.JButton btnUkloni;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblStavke;
    private javax.swing.JTextField txtDatum;
    private javax.swing.JTextField txtId;
    // End of variables declaration//GEN-END:variables

    private void srediFormu() {
        try {
            List<AbstractObject> listaSkijasa = Kontroler.getInstance().vratiListuSkijasa();
            jComboBox1.setModel( new DefaultComboBoxModel(listaSkijasa.toArray()));
            listaDostupnihParovaSkija = Kontroler.getInstance().vratiListuParovaSkija();
            tipS = new JComboBox(listaDostupnihParovaSkija.toArray());

            model = new ModelRezervacijaTabelaStavki(new ArrayList<StavkaRezervacijeSkija>());
            tblStavke.setModel(model);
            tblStavke.getColumnModel().getColumn(5).setCellEditor(new DefaultCellEditor(tipS));
            tblStavke.setColumnSelectionAllowed(true);

        } catch (Exception ex) {
            Logger.getLogger(FrmRezervacijaParaSkija.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void proveriDupleUnose() throws Exception {
        for (StavkaRezervacijeSkija s : model.getListaStavki()) {
            int i = 0;
            for (StavkaRezervacijeSkija sr : model.getListaStavki()) {
                if (s.getParSkija().equals(sr.getParSkija())) {
                    i++;
                    if (i == 2) {
                        throw new Exception("Ne mozete rezervisati isti par skija vise puta!");
                    }
                }
            }
        }
    }

    private void ucitajRezervacijuPodatke(RezervacijaSkija rezervacijaSkija) {
        txtId.setText(rezervacijaSkija.getRezervacijaID());
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
        txtDatum.setText(sdf.format(rezervacijaSkija.getDatumRezervacije()));
        jRadioButton1.setSelected(rezervacijaSkija.isUplataUnapred());
        jComboBox1.setSelectedItem(rezervacijaSkija.getSkijas());
        model.setListaStavki(rezervacijaSkija.getListaStavki());
        for (StavkaRezervacijeSkija stavkaRezervacijeSkija : rezervacijaSkija.getListaStavki()) {
            listaDostupnihParovaSkija.remove(stavkaRezervacijeSkija.getParSkija());
        }
    }

}
